{
  "imports": {
    "@playwright/test": "npm:@playwright/test@1.55.1",
    "@std/assert": "jsr:@std/assert@1.0.14",
    "@std/fs": "jsr:@std/fs@1.0.19",
    "@std/path": "jsr:@std/path@1.1.2",
    "@std/testing": "jsr:@std/testing@1.0.15",
    "@typescript-eslint/eslint-plugin": "npm:@typescript-eslint/eslint-plugin@8.45.0",
    "@typescript-eslint/parser": "npm:@typescript-eslint/parser@8.45.0",
    "@vento/vento": "jsr:@vento/vento@1.14.0",
    "components/": "./src/components/",
    "cssnano-preset-advanced": "npm:cssnano-preset-advanced@7.0.9",
    "cssnano": "npm:cssnano@7.1.1",
    "eslint-config-prettier": "npm:eslint-config-prettier@10.1.8",
    "eslint-plugin-import": "npm:eslint-plugin-import@2.32.0",
    "eslint-plugin-jsdoc": "npm:eslint-plugin-jsdoc@60.8.2",
    "eslint-plugin-promise": "npm:eslint-plugin-promise@7.2.1",
    "eslint-plugin-unicorn": "npm:eslint-plugin-unicorn@61.0.2",
    "eslint": "npm:eslint@9.37.0",
    "fast-check": "npm:fast-check@4.3.0",
    "http-server": "npm:http-server@14.1.1",
    "jiti": "npm:jiti@2.6.1",
    "playwright": "npm:playwright@1.55.1",
    "postcss": "npm:postcss@8.5.6",
    "prettier": "npm:prettier@3.6.2",
    "scripts/": "./src/scripts/",
    "stylelint-config-standard": "npm:stylelint-config-standard@39.0.1",
    "stylelint": "npm:stylelint@16.25.0",
    "uglify-js": "npm:uglify-js@3.19.3",
    "zod": "npm:zod@4.1.11"
  },
  "tasks": {
    "build": {
      "description": "Builds the site",
      "command": "BROWSERSLIST_ROOT_PATH=. deno run --allow-env=CI,BROWSERSLIST,BROWSERSLIST_CONFIG,BROWSERSLIST_DISABLE_CACHE,BROWSERSLIST_IGNORE_OLD_DATA,BROWSERSLIST_ROOT_PATH,BROWSERSLIST_STATS,NODE_ENV,TERM,UGLIFY_BUG_REPORT --deny-env=NO_COLOR,FORCE_COLOR,BROWSERSLIST_ENV --allow-net=api.ratings.food.gov.uk:443,ratings.food.gov.uk:443 --allow-read=./,./assets,./build,./dist,./src --allow-write=./build,./dist --allow-sys=homedir,uid src/generate-site.mts"
    },
    "deno:lock-update": {
      "description": "Updates the lock file",
      "command": "deno cache --frozen=false src/generate-site.mts && deno install"
    },
    "deno:update-dependencies": {
      "description": "Updates Deno dependencies",
      "command": "deno outdated && deno outdated --update --latest"
    },
    "eslint:check": {
      "description": "Runs ESLint on the codebase",
      "command": "deno run --allow-env --allow-read --allow-write=./.eslintcache --allow-sys=cpus,homedir npm:eslint ."
    },
    "git:pre-commit": {
      "description": "Updates and validadates the code as done in CI",
      "command": "deno install && deno task deno:lock-update && deno test && deno lint && deno task eslint:check && deno task stylelint:check && deno task prettier:debug-check && deno task prettier:write && deno fmt && deno check src/generate-site.mts"
    },
    "playwright:install": {
      "description": "Installs Playwright dependencies",
      "command": "deno run --allow-env --allow-read=/proc/version,../node_modules,/node_modules,/etc/os-release,/home/node/.cache/ms-playwright,/home/runner/.cache/ms-playwright,$(which deno),/tmp/,/ms-playwright/.docker-info --allow-write=/home/node/.cache/ms-playwright,/home/runner/.cache/ms-playwright,/tmp/ --allow-run=$(which deno),/sbin/ldconfig,which,sudo --allow-sys=osRelease,homedir,uid npm:playwright install --with-deps"
    },
    "playwright:show-report": {
      "description": "Shows the Playwright report",
      "command": "deno run --allow-env --allow-read=/proc/version,/etc/os-release,../node_modules,/node_modules,./,$(which deno) --allow-net=127.0.0.1:9323 --allow-run=./node_modules/.deno/playwright-core@1.52.0/node_modules/playwright-core/lib/utilsBundleImpl/xdg-open --allow-sys=osRelease,homedir,uid npm:playwright show-report"
    },
    "playwright:test": {
      "description": "Runs Playwright tests",
      "command": "deno task playwright:install && deno run --allow-env --allow-net=\"localhost,[::1]:8080,127.0.0.1:8080,127.0.0.1:9323\" --allow-read=./,/node_modules/,../node_modules,/proc/version,/etc/os-release,/tmp/,../tsconfig.json,../../tsconfig.json,../../../tsconfig.json,../../../../tsconfig.json,../../../../../tsconfig.json,../../../../../../tsconfig.json,../../../../../../../tsconfig.json,../jsconfig.json,../../jsconfig.json,../../../jsconfig.json,../../../../jsconfig.json,../../../../../jsconfig.json,../../../../../../jsconfig.json,../../../../../../../jsconfig.json,$(which deno) --allow-write=./test-results/,./playwright-report,/tmp/ --allow-sys=cpus,homedir,osRelease,uid --allow-run npm:playwright test"
    },
    "prettier:debug-check": {
      "description": "Runs prettier on the code through Deno - --debug-check",
      "command": "deno run --allow-env --allow-read=./,./.gitignore,./.prettierignore,./package.json,./node_modules --allow-write=./node_modules/.cache/prettier --allow-sys=cpus,uid npm:prettier . --debug-check"
    },
    "prettier:write": {
      "description": "Runs prettier on the code through Deno - --write",
      "command": "deno run --allow-env --allow-read=./,./.gitignore,./.prettierignore,./package.json,./node_modules --allow-write=./ --allow-sys=cpus,uid npm:prettier . --write"
    },
    "renovate:config-check": {
      "description": "Runs Renovate config validator",
      "command": "npx --yes --package renovate -- renovate-config-validator --strict"
    },
    "serve:dist": {
      "description": "Serves the generated site",
      "command": "deno run --allow-env --allow-read=./dist --allow-sys=networkInterfaces --allow-net=0.0.0.0:8080 npm:http-server dist --port 8080 --silent"
    },
    "stylelint:check": {
      "description": "Runs stylelint on the codebase",
      "command": "deno run --allow-env --allow-read --allow-write=.stylelintcache --allow-sys=cpus,gid,homedir,uid npm:stylelint --config ./stylelint.config.mjs \"**/*.css\""
    },
    "stylelint:fix": {
      "description": "Runs stylelint on the codebase",
      "command": "deno run --allow-env --allow-read --allow-write=./ --allow-sys=cpus,gid,homedir,uid npm:stylelint --config ./stylelint.config.mjs --fix \"**/*.css\""
    },
    "test:e2e": {
      "description": "Runs end-to-end tests",
      "command": "deno task playwright:test"
    }
  },
  "fmt": {
    "indentWidth": 2,
    "lineWidth": 80,
    "semiColons": true,
    "proseWrap": "preserve",
    "singleQuote": false,
    "useTabs": false
  },
  "lint": {
    "rules": {
      "tags": ["recommended"],
      "exclude": ["require-await"]
    }
  },
  "exclude": [
    "build/",
    "dist/",
    "playwright-report/",
    "test-results/",
    "./assets/google3decab8acc23e179.html"
  ],
  "nodeModulesDir": "auto"
}
