name: Pull Request

on:
  pull_request:

permissions:
  contents: read

jobs:
  command-outputs:
    name: Set "outputs" from command execution
    runs-on: ubuntu-latest
    # Map a step output to a job output
    outputs:
      DENO_VERSION: ${{ steps.commands.outputs.DENO_VERSION }}
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          sparse-checkout: |
            .deno-version
          sparse-checkout-cone-mode: false

      - name: Commands
        id: commands
        run: |
          echo "DENO_VERSION=$(cat .deno-version)" >> "$GITHUB_OUTPUT"

  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 30 # Prevent hanging jobs

    needs: [command-outputs]
    env:
      DENO_VERSION: ${{ needs.command-outputs.outputs.DENO_VERSION }}

    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 1

      - name: Setup Deno
        uses: denoland/setup-deno@e95548e56dfa95d4e1a28d6f422fafe75c4c26fb # v2.0.3
        with:
          deno-version: ${{ env.DENO_VERSION }}

      - name: Deno install
        run: deno install

      - name: Run Deno test
        run: deno test .

      - name: Run ESLint
        run: deno task eslint

      - name: Run Deno lint
        run: deno lint .

      - name: Run formatter
        run: |
          (deno task prettier:write || [ $? -eq 1 ]) && deno fmt
          if [ -n "$(git status --porcelain)" ]; then
            echo "Error: Unformatted files detected. Please commit changes after running the formatter."
            exit 1
          fi

      - name: Run Deno check
        run: deno check src/generate-site.mts
